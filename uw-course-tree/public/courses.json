[
  {
    "code": "cs115",
    "name": "Introduction to Computer Science 1",
    "description": "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming. Function definition and application. Tracing via substitution. Design, testing, and documentation. Recursive data definitions. Lists and trees. Functional and data abstraction.",
    "prereqs": null,
    "antireqs": "BME121, CS135, CS137, CS138, CS145, CHE121, CIVE121, ECE150, GENE121/MTE121, ME101, NE111, MSE121, PHYS139, SYDE121",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "biol487",
        "name": "Computational Neuroscience"
      },
      {
        "code": "cs116",
        "name": "Introduction to Computer Science 2"
      },
      {
        "code": "cs136",
        "name": "Elementary Algorithm Design and Data Abstraction"
      },
      {
        "code": "ece222",
        "name": "Digital Computers"
      },
      {
        "code": "hlth453",
        "name": "Computing in Health Informatics"
      },
      {
        "code": "hlth454",
        "name": "Information Visualization"
      },
      {
        "code": "msci343",
        "name": "Human-Computer Interaction"
      },
      {
        "code": "phys239",
        "name": "Computational Physics 2"
      },
      {
        "code": "phys339",
        "name": "Scientific Computation 2"
      },
      {
        "code": "cs136l",
        "name": "Tools and Techniques for Software Development"
      },
      {
        "code": "afm127",
        "name": "Introduction to Global Capital Markets and Financial Analytics"
      },
      {
        "code": "actsc127",
        "name": "Introduction to Global Capital Markets and Financial Analytics"
      },
      {
        "code": "cs230",
        "name": "Introduction to Computers and Computer Systems"
      },
      {
        "code": "cs234",
        "name": "Data Types and Structures"
      },
      {
        "code": "cs330",
        "name": "Management Information Systems"
      },
      {
        "code": "cs335",
        "name": "Computational Methods in Business and Finance"
      },
      {
        "code": "cs231",
        "name": "Algorithmic Problem Solving"
      }
    ]
  },
  {
    "code": "cs116",
    "name": "Introduction to Computer Science 2",
    "description": "This course builds on the techniques and patterns learned in CS115 while making the transition to use of an imperative language. Generative and structural recursion. Mutation (assignment) and its role in an imperative language. Primitive types and basic I/O. Sequencing, selection, looping. Function definition and use. File and console I/O. Issues in computer science.",
    "prereqs": "CS115 or CS135 or CS145.",
    "antireqs": "CS114, CS136, CS137, CS138, CS146, PHYS236, PHYS239, MSE240, NE111",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "amath242",
        "name": "Introduction to Computational Mathematics"
      },
      {
        "code": "cm271",
        "name": "Introduction to Computational Mathematics"
      },
      {
        "code": "cs136",
        "name": "Elementary Algorithm Design and Data Abstraction"
      },
      {
        "code": "cs230",
        "name": "Introduction to Computers and Computer Systems"
      },
      {
        "code": "cs231",
        "name": "Algorithmic Problem Solving"
      },
      {
        "code": "cs234",
        "name": "Data Types and Structures"
      },
      {
        "code": "cs330",
        "name": "Management Information Systems"
      },
      {
        "code": "cs335",
        "name": "Computational Methods in Business and Finance"
      },
      {
        "code": "cs371",
        "name": "Introduction to Computational Mathematics"
      },
      {
        "code": "hlth453",
        "name": "Computing in Health Informatics"
      },
      {
        "code": "hlth454",
        "name": "Information Visualization"
      },
      {
        "code": "msci343",
        "name": "Human-Computer Interaction"
      },
      {
        "code": "stat340",
        "name": "Stochastic Simulation Methods"
      },
      {
        "code": "biol365",
        "name": "Methods in Bioinformatics"
      },
      {
        "code": "phys267",
        "name": "Probability, Statistics, and Data Analysis for Physics and Astronomy"
      },
      {
        "code": "phys249",
        "name": "Computational Physics and Linear Algebra"
      },
      {
        "code": "cs338",
        "name": "Computer Applications in Business: Databases"
      },
      {
        "code": "phys363",
        "name": "Intermediate Classical Mechanics"
      },
      {
        "code": "phys364",
        "name": "Mathematical Physics 1"
      },
      {
        "code": "phys375",
        "name": "Stars"
      },
      {
        "code": "cs136l",
        "name": "Tools and Techniques for Software Development"
      },
      {
        "code": "co487",
        "name": "Applied Cryptography"
      },
      {
        "code": "phys359",
        "name": "Statistical Mechanics"
      },
      {
        "code": "phys225",
        "name": "Modeling Biological Physics"
      },
      {
        "code": "amath345",
        "name": "Data-Driven Mathematical Models"
      }
    ]
  },
  {
    "code": "cs135",
    "name": "Designing Functional Programs",
    "description": "An introduction to the fundamentals of computer science through the application of elementary programming patterns in the functional style of programming. Syntax and semantics of a functional programming language. Tracing via substitution. Design, testing, and documentation. Linear and nonlinear data structures. Recursive data definitions. Abstraction and encapsulation. Generative and structural recursion. Historical context.",
    "prereqs": null,
    "antireqs": "AE121, BME121, CS115, CS137, CS138, CS145, CIVE121, ECE150, ME101, MSE121, PHYS236, SYDE121",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "biol487",
        "name": "Computational Neuroscience"
      },
      {
        "code": "cs116",
        "name": "Introduction to Computer Science 2"
      },
      {
        "code": "cs136",
        "name": "Elementary Algorithm Design and Data Abstraction"
      },
      {
        "code": "ece222",
        "name": "Digital Computers"
      },
      {
        "code": "hlth453",
        "name": "Computing in Health Informatics"
      },
      {
        "code": "hlth454",
        "name": "Information Visualization"
      },
      {
        "code": "msci343",
        "name": "Human-Computer Interaction"
      },
      {
        "code": "phys239",
        "name": "Computational Physics 2"
      },
      {
        "code": "phys339",
        "name": "Scientific Computation 2"
      },
      {
        "code": "cs136l",
        "name": "Tools and Techniques for Software Development"
      },
      {
        "code": "afm127",
        "name": "Introduction to Global Capital Markets and Financial Analytics"
      },
      {
        "code": "actsc127",
        "name": "Introduction to Global Capital Markets and Financial Analytics"
      },
      {
        "code": "cs230",
        "name": "Introduction to Computers and Computer Systems"
      },
      {
        "code": "cs234",
        "name": "Data Types and Structures"
      },
      {
        "code": "cs330",
        "name": "Management Information Systems"
      },
      {
        "code": "cs335",
        "name": "Computational Methods in Business and Finance"
      },
      {
        "code": "cs231",
        "name": "Algorithmic Problem Solving"
      }
    ]
  },
  {
    "code": "cs136",
    "name": "Elementary Algorithm Design and Data Abstraction",
    "description": "This course builds on the techniques and patterns learned in CS135 while making the transition to use an imperative language. It introduces the design and analysis of algorithms, the management of information, and the programming mechanisms and methodologies required in implementations. Topics discussed include iterative and recursive sorting algorithms; lists, stacks, queues, trees, and their application; abstract data types and their implementations.",
    "prereqs": "One of CS145, at least 90% in CS115, at least 70% in CS116, at least 60% in CS135.",
    "antireqs": "CS137, CS138, CS146, PHYS239",
    "coreqs": "CS136L.",
    "postrequisites": [
      {
        "code": "amath242",
        "name": "Introduction to Computational Mathematics"
      },
      {
        "code": "biol365",
        "name": "Methods in Bioinformatics"
      },
      {
        "code": "cm271",
        "name": "Introduction to Computational Mathematics"
      },
      {
        "code": "cs230",
        "name": "Introduction to Computers and Computer Systems"
      },
      {
        "code": "cs231",
        "name": "Algorithmic Problem Solving"
      },
      {
        "code": "cs234",
        "name": "Data Types and Structures"
      },
      {
        "code": "cs241",
        "name": "Foundations of Sequential Programs"
      },
      {
        "code": "cs241e",
        "name": "Foundations of Sequential Programs (Enriched)"
      },
      {
        "code": "cs245",
        "name": "Logic and Computation"
      },
      {
        "code": "cs245e",
        "name": "Logic and Computation (Enriched)"
      },
      {
        "code": "cs246",
        "name": "Object-Oriented Software Development"
      },
      {
        "code": "cs246e",
        "name": "Object-Oriented Software Development (Enriched)"
      },
      {
        "code": "cs251",
        "name": "Computer Organization and Design"
      },
      {
        "code": "cs330",
        "name": "Management Information Systems"
      },
      {
        "code": "cs335",
        "name": "Computational Methods in Business and Finance"
      },
      {
        "code": "cs371",
        "name": "Introduction to Computational Mathematics"
      },
      {
        "code": "hlth453",
        "name": "Computing in Health Informatics"
      },
      {
        "code": "hlth454",
        "name": "Information Visualization"
      },
      {
        "code": "msci343",
        "name": "Human-Computer Interaction"
      },
      {
        "code": "stat340",
        "name": "Stochastic Simulation Methods"
      },
      {
        "code": "cs240e",
        "name": "Data Structures and Data Management (Enriched)"
      },
      {
        "code": "cs251e",
        "name": "Computer Organization and Design (Enriched)"
      },
      {
        "code": "phys249",
        "name": "Computational Physics and Linear Algebra"
      },
      {
        "code": "cs338",
        "name": "Computer Applications in Business: Databases"
      },
      {
        "code": "phys363",
        "name": "Intermediate Classical Mechanics"
      },
      {
        "code": "phys364",
        "name": "Mathematical Physics 1"
      },
      {
        "code": "phys375",
        "name": "Stars"
      },
      {
        "code": "phys267",
        "name": "Probability, Statistics, and Data Analysis for Physics and Astronomy"
      },
      {
        "code": "cs136l",
        "name": "Tools and Techniques for Software Development"
      },
      {
        "code": "co487",
        "name": "Applied Cryptography"
      },
      {
        "code": "phys359",
        "name": "Statistical Mechanics"
      },
      {
        "code": "phys225",
        "name": "Modeling Biological Physics"
      },
      {
        "code": "amath345",
        "name": "Data-Driven Mathematical Models"
      }
    ]
  },
  {
    "code": "cs136l",
    "name": "Tools and Techniques for Software Development",
    "description": "This course introduces students to tools and techniques useful in the software development lifecycle. Students learn to navigate and leverage commands and utilities in the Linux Command Line Shell. Students gain experience in version control software, writing scripts to automate tasks, and creating effective test cases to identify bugs. Tracing and debugging strategies are discussed. Students also gain experience in using built-in support for version control, testing, debugging, build automation, etc. in integrated development environments (IDEs).",
    "prereqs": "One of CS145, at least 90% in CS115, at least 70% in CS116, at least 60% in CS135.",
    "antireqs": null,
    "coreqs": "CS136 or CS146",
    "postrequisites": [
      {
        "code": "cs136",
        "name": "Elementary Algorithm Design and Data Abstraction"
      },
      {
        "code": "cs146",
        "name": "Elementary Algorithm Design and Data Abstraction (Advanced Level)"
      },
      {
        "code": "cs241",
        "name": "Foundations of Sequential Programs"
      },
      {
        "code": "cs246",
        "name": "Object-Oriented Software Development"
      },
      {
        "code": "cs241e",
        "name": "Foundations of Sequential Programs (Enriched)"
      },
      {
        "code": "cs246e",
        "name": "Object-Oriented Software Development (Enriched)"
      }
    ]
  },
  {
    "code": "cs145",
    "name": "Designing Functional Programs (Advanced Level)",
    "description": "CS145 is an advanced-level version of CS135.",
    "prereqs": null,
    "antireqs": "CS115, CS135, CS137, CS138",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "cm271",
        "name": "Introduction to Computational Mathematics"
      },
      {
        "code": "cs116",
        "name": "Introduction to Computer Science 2"
      },
      {
        "code": "cs136",
        "name": "Elementary Algorithm Design and Data Abstraction"
      },
      {
        "code": "cs146",
        "name": "Elementary Algorithm Design and Data Abstraction (Advanced Level)"
      },
      {
        "code": "ece222",
        "name": "Digital Computers"
      },
      {
        "code": "msci343",
        "name": "Human-Computer Interaction"
      },
      {
        "code": "phys239",
        "name": "Computational Physics 2"
      },
      {
        "code": "phys339",
        "name": "Scientific Computation 2"
      },
      {
        "code": "stat340",
        "name": "Stochastic Simulation Methods"
      },
      {
        "code": "cs136l",
        "name": "Tools and Techniques for Software Development"
      },
      {
        "code": "cs330",
        "name": "Management Information Systems"
      }
    ]
  },
  {
    "code": "cs146",
    "name": "Elementary Algorithm Design and Data Abstraction (Advanced Level)",
    "description": "CS146 is an advanced-level version of CS136.",
    "prereqs": "CS145 with a grade of at least 75%.",
    "antireqs": "CS116, CS136, CS137, CS138.",
    "coreqs": "CS136L.",
    "postrequisites": [
      {
        "code": "amath242",
        "name": "Introduction to Computational Mathematics"
      },
      {
        "code": "cm271",
        "name": "Introduction to Computational Mathematics"
      },
      {
        "code": "cs230",
        "name": "Introduction to Computers and Computer Systems"
      },
      {
        "code": "cs231",
        "name": "Algorithmic Problem Solving"
      },
      {
        "code": "cs234",
        "name": "Data Types and Structures"
      },
      {
        "code": "cs241",
        "name": "Foundations of Sequential Programs"
      },
      {
        "code": "cs241e",
        "name": "Foundations of Sequential Programs (Enriched)"
      },
      {
        "code": "cs245",
        "name": "Logic and Computation"
      },
      {
        "code": "cs245e",
        "name": "Logic and Computation (Enriched)"
      },
      {
        "code": "cs246",
        "name": "Object-Oriented Software Development"
      },
      {
        "code": "cs246e",
        "name": "Object-Oriented Software Development (Enriched)"
      },
      {
        "code": "cs251",
        "name": "Computer Organization and Design"
      },
      {
        "code": "cs330",
        "name": "Management Information Systems"
      },
      {
        "code": "cs335",
        "name": "Computational Methods in Business and Finance"
      },
      {
        "code": "cs371",
        "name": "Introduction to Computational Mathematics"
      },
      {
        "code": "msci343",
        "name": "Human-Computer Interaction"
      },
      {
        "code": "cs240e",
        "name": "Data Structures and Data Management (Enriched)"
      },
      {
        "code": "cs251e",
        "name": "Computer Organization and Design (Enriched)"
      },
      {
        "code": "phys249",
        "name": "Computational Physics and Linear Algebra"
      },
      {
        "code": "cs338",
        "name": "Computer Applications in Business: Databases"
      },
      {
        "code": "phys363",
        "name": "Intermediate Classical Mechanics"
      },
      {
        "code": "phys364",
        "name": "Mathematical Physics 1"
      },
      {
        "code": "phys375",
        "name": "Stars"
      },
      {
        "code": "phys267",
        "name": "Probability, Statistics, and Data Analysis for Physics and Astronomy"
      },
      {
        "code": "cs136l",
        "name": "Tools and Techniques for Software Development"
      },
      {
        "code": "co487",
        "name": "Applied Cryptography"
      },
      {
        "code": "phys359",
        "name": "Statistical Mechanics"
      },
      {
        "code": "phys225",
        "name": "Modeling Biological Physics"
      },
      {
        "code": "amath345",
        "name": "Data-Driven Mathematical Models"
      }
    ]
  },
  {
    "code": "cs240",
    "name": "Data Structures and Data Management",
    "description": "Introduction to widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms. Specific topics include priority queues, sorting, dictionaries, data structures for text processing.",
    "prereqs": "(CS245/CS245E or SE212), (one of CS241/CS241E, CS246/CS246E, CS247), (one of STAT206, STAT230, STAT240); Honours Computer Science, Honours Data Science (BCS, BMath), BCFM, BSE students only.",
    "antireqs": "BME122, CS234, CS240E, ECE250, MTE140, SYDE223",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "amath447",
        "name": "Introduction to Symbolic Computation"
      },
      {
        "code": "cm339",
        "name": "Algorithms"
      },
      {
        "code": "cm433",
        "name": "Introduction to Symbolic Computation"
      },
      {
        "code": "cs341",
        "name": "Algorithms"
      },
      {
        "code": "cs348",
        "name": "Introduction to Database Management"
      },
      {
        "code": "cs350",
        "name": "Operating Systems"
      },
      {
        "code": "cs360",
        "name": "Introduction to the Theory of Computing"
      },
      {
        "code": "cs365",
        "name": "Models of Computation"
      },
      {
        "code": "cs383",
        "name": "Computational Digital Art Studio"
      },
      {
        "code": "cs398",
        "name": "Topics in Computer Science"
      },
      {
        "code": "cs399",
        "name": "Readings in Computer Science"
      },
      {
        "code": "cs442",
        "name": "Principles of Programming Languages"
      },
      {
        "code": "cs449",
        "name": "Human-Computer Interaction"
      },
      {
        "code": "cs487",
        "name": "Introduction to Symbolic Computation"
      },
      {
        "code": "cs492",
        "name": "The Social Implications of Computing"
      },
      {
        "code": "ece324",
        "name": "Microprocessor Systems and Interfacing"
      },
      {
        "code": "ece354",
        "name": "Real-time Operating Systems"
      },
      {
        "code": "ece457",
        "name": "Applied Artificial Intelligence"
      },
      {
        "code": "msci541",
        "name": "Search Engines"
      },
      {
        "code": "se350",
        "name": "Operating Systems"
      },
      {
        "code": "se382",
        "name": "Human-computer Interaction"
      },
      {
        "code": "se390",
        "name": "Design Project Planning"
      },
      {
        "code": "syde322",
        "name": "Software Design"
      },
      {
        "code": "syde422",
        "name": "Machine Intelligence"
      },
      {
        "code": "syde522",
        "name": "Foundations of Artificial Intelligence"
      },
      {
        "code": "msci445",
        "name": "Telecommunication Systems: from protocols to applications"
      },
      {
        "code": "msci446",
        "name": "Introduction to Machine Learning"
      },
      {
        "code": "mse446",
        "name": "Introduction to Machine Learning"
      },
      {
        "code": "mse541",
        "name": "Search Engines"
      }
    ]
  },
  {
    "code": "cs240e",
    "name": "Data Structures and Data Management (Enriched)",
    "description": "Enriched version of CS240.",
    "prereqs": "A grade of 85% or higher in one of CS136, CS138 or CS146; Honours Computer Science, Honours Data Science (BCS, BMath), BCFM, BSE students only.",
    "antireqs": "CS234, CS240, ECE250",
    "coreqs": "One of STAT206, STAT230, STAT240.",
    "postrequisites": [
      {
        "code": "cs341",
        "name": "Algorithms"
      },
      {
        "code": "cs360",
        "name": "Introduction to the Theory of Computing"
      },
      {
        "code": "cs442",
        "name": "Principles of Programming Languages"
      },
      {
        "code": "cs348",
        "name": "Introduction to Database Management"
      },
      {
        "code": "cs487",
        "name": "Introduction to Symbolic Computation"
      },
      {
        "code": "cs492",
        "name": "The Social Implications of Computing"
      },
      {
        "code": "syde322",
        "name": "Software Design"
      },
      {
        "code": "syde522",
        "name": "Foundations of Artificial Intelligence"
      },
      {
        "code": "cs365",
        "name": "Models of Computation"
      },
      {
        "code": "cs398",
        "name": "Topics in Computer Science"
      },
      {
        "code": "cs399",
        "name": "Readings in Computer Science"
      },
      {
        "code": "cs350",
        "name": "Operating Systems"
      },
      {
        "code": "msci446",
        "name": "Introduction to Machine Learning"
      },
      {
        "code": "se390",
        "name": "Design Project Planning"
      },
      {
        "code": "se350",
        "name": "Operating Systems"
      },
      {
        "code": "msci541",
        "name": "Search Engines"
      },
      {
        "code": "cs449",
        "name": "Human-Computer Interaction"
      },
      {
        "code": "mse446",
        "name": "Introduction to Machine Learning"
      },
      {
        "code": "mse541",
        "name": "Search Engines"
      },
      {
        "code": "cs383",
        "name": "Computational Digital Art Studio"
      }
    ]
  },
  {
    "code": "cs241",
    "name": "Foundations of Sequential Programs",
    "description": "The relationship between high-level languages and the computer architecture that underlies their implementation, including basic machine architecture, assemblers, specification and translation of programming languages, linkers and loaders, block-structured languages, parameter passing mechanisms, and comparison of programming languages.",
    "prereqs": "CS138 or (CS246/CS246E and CS136L) or (CS136L and a grade of 85% or higher in one of CS136 or CS146); Honours Computer Science, Honours Data Science (BCS, BMath), BCFM, BSE students only.",
    "antireqs": "CS230, CS241E, ECE351",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "cs240",
        "name": "Data Structures and Data Management"
      },
      {
        "code": "cs240e",
        "name": "Data Structures and Data Management (Enriched)"
      },
      {
        "code": "cs247",
        "name": "Software Engineering Principles"
      },
      {
        "code": "cs349",
        "name": "User Interfaces"
      },
      {
        "code": "cs350",
        "name": "Operating Systems"
      },
      {
        "code": "cs360",
        "name": "Introduction to the Theory of Computing"
      },
      {
        "code": "cs365",
        "name": "Models of Computation"
      },
      {
        "code": "cs370",
        "name": "Numerical Computation"
      },
      {
        "code": "cs436",
        "name": "Networks and Distributed Computer Systems"
      },
      {
        "code": "cs449",
        "name": "Human-Computer Interaction"
      },
      {
        "code": "ece324",
        "name": "Microprocessor Systems and Interfacing"
      },
      {
        "code": "ece354",
        "name": "Real-time Operating Systems"
      }
    ]
  },
  {
    "code": "cs241e",
    "name": "Foundations of Sequential Programs (Enriched)",
    "description": "Enriched version of CS241.",
    "prereqs": "(CS136L and a grade of 85% or higher in one of CS136 or CS146), or a grade of 85% or higher in CS138; Honours Computer Science, Honours Data Science (BCS, BMath), BCFM, BSE students only.",
    "antireqs": "CS230, ECE351",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "cs240",
        "name": "Data Structures and Data Management"
      },
      {
        "code": "cs360",
        "name": "Introduction to the Theory of Computing"
      },
      {
        "code": "cs370",
        "name": "Numerical Computation"
      },
      {
        "code": "cs436",
        "name": "Networks and Distributed Computer Systems"
      },
      {
        "code": "cs365",
        "name": "Models of Computation"
      },
      {
        "code": "cs350",
        "name": "Operating Systems"
      },
      {
        "code": "cs349",
        "name": "User Interfaces"
      },
      {
        "code": "cs247",
        "name": "Software Engineering Principles"
      },
      {
        "code": "cs449",
        "name": "Human-Computer Interaction"
      }
    ]
  },
  {
    "code": "cs245",
    "name": "Logic and Computation",
    "description": "Logic as a tool for representation, reasoning, and computation. Propositional and predicate logic. Formalizing the notions of correct and incorrect reasoning, defining what is computable, and exploring the limits of computation. Godel's Incompleteness Theorem. Applications of logic to computer science.",
    "prereqs": "(One of CS136, CS138, CS146), (MATH135 or MATH145); Honours Mathematics students only.",
    "antireqs": "CS245E, PMATH330, ECE208, SE212",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "cm339",
        "name": "Algorithms"
      },
      {
        "code": "cs240",
        "name": "Data Structures and Data Management"
      },
      {
        "code": "cs240e",
        "name": "Data Structures and Data Management (Enriched)"
      },
      {
        "code": "cs450",
        "name": "Computer Architecture"
      },
      {
        "code": "ece356",
        "name": "Database Systems"
      },
      {
        "code": "cs341",
        "name": "Algorithms"
      },
      {
        "code": "ece351",
        "name": "Compilers"
      }
    ]
  },
  {
    "code": "cs245e",
    "name": "Logic and Computation (Enriched)",
    "description": "Enriched version of CS245.",
    "prereqs": "A grade of 85% or higher in one of CS136 or CS146; Honours Mathematics students only.",
    "antireqs": "CS245, ECE208, PMATH330, and SE212",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "cs240",
        "name": "Data Structures and Data Management"
      },
      {
        "code": "cs450",
        "name": "Computer Architecture"
      },
      {
        "code": "cs341",
        "name": "Algorithms"
      },
      {
        "code": "ece351",
        "name": "Compilers"
      },
      {
        "code": "ece356",
        "name": "Database Systems"
      }
    ]
  },
  {
    "code": "cs246",
    "name": "Object-Oriented Software Development",
    "description": "Introduction to object-oriented programming and to tools and techniques for software development. Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites.",
    "prereqs": "(CS146 and CS136L) or (a grade of 60% or higher in CS138) or (CS136L and a grade of 60% or higher in CS136); Honours Mathematics students only.",
    "antireqs": "CS246E, CS247, MSE342, SYDE322",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "cs240",
        "name": "Data Structures and Data Management"
      },
      {
        "code": "cs240e",
        "name": "Data Structures and Data Management (Enriched)"
      },
      {
        "code": "cs241",
        "name": "Foundations of Sequential Programs"
      },
      {
        "code": "cs338",
        "name": "Computer Applications in Business: Databases"
      },
      {
        "code": "cs350",
        "name": "Operating Systems"
      },
      {
        "code": "cs370",
        "name": "Numerical Computation"
      },
      {
        "code": "cs398",
        "name": "Topics in Computer Science"
      },
      {
        "code": "cs399",
        "name": "Readings in Computer Science"
      },
      {
        "code": "cs436",
        "name": "Networks and Distributed Computer Systems"
      },
      {
        "code": "cs457",
        "name": "System Performance Evaluation"
      },
      {
        "code": "se350",
        "name": "Operating Systems"
      },
      {
        "code": "se382",
        "name": "Human-computer Interaction"
      },
      {
        "code": "se390",
        "name": "Design Project Planning"
      },
      {
        "code": "se463",
        "name": "Software Requirements Specification and Analysis"
      },
      {
        "code": "se464",
        "name": "Software Design and Architectures"
      },
      {
        "code": "se465",
        "name": "Software Testing and Quality Assurance"
      },
      {
        "code": "cs346",
        "name": "Application Development"
      }
    ]
  },
  {
    "code": "cs246e",
    "name": "Object-Oriented Software Development (Enriched)",
    "description": "Enriched version of CS246.",
    "prereqs": "CS136L, a grade of 85% in either CS136 or CS146; Honours Mathematics students only.",
    "antireqs": "CS246, SYDE322",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "cs240",
        "name": "Data Structures and Data Management"
      },
      {
        "code": "cs241",
        "name": "Foundations of Sequential Programs"
      },
      {
        "code": "cs338",
        "name": "Computer Applications in Business: Databases"
      },
      {
        "code": "cs370",
        "name": "Numerical Computation"
      },
      {
        "code": "cs436",
        "name": "Networks and Distributed Computer Systems"
      },
      {
        "code": "cs457",
        "name": "System Performance Evaluation"
      },
      {
        "code": "se464",
        "name": "Software Design and Architectures"
      },
      {
        "code": "se465",
        "name": "Software Testing and Quality Assurance"
      },
      {
        "code": "cs398",
        "name": "Topics in Computer Science"
      },
      {
        "code": "cs399",
        "name": "Readings in Computer Science"
      },
      {
        "code": "cs350",
        "name": "Operating Systems"
      },
      {
        "code": "se390",
        "name": "Design Project Planning"
      },
      {
        "code": "se350",
        "name": "Operating Systems"
      },
      {
        "code": "cs346",
        "name": "Application Development"
      },
      {
        "code": "se463",
        "name": "Software Requirements Specification and Analysis"
      }
    ]
  },
  {
    "code": "cs251",
    "name": "Computer Organization and Design",
    "description": "Overview of computer organization and performance. Basics of digital logic design. Combinational and sequential elements. Data representation and manipulation. Basics of processor design. Pipelining. Memory hierarchies. Multiprocessors.",
    "prereqs": "One of CS136, CS138, CS146; Honours Computer Science, Honours Data Science (BCS, BMath), BCFM, BSE students only.",
    "antireqs": "BME292/BME393, CS251E, ECE222, ME262, MTE262, SYDE192",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "cs350",
        "name": "Operating Systems"
      },
      {
        "code": "cs431",
        "name": "Data-Intensive Distributed Analytics"
      },
      {
        "code": "cs436",
        "name": "Networks and Distributed Computer Systems"
      }
    ]
  },
  {
    "code": "cs341",
    "name": "Algorithms",
    "description": "The study of efficient algorithms and effective algorithm design techniques. Program design with emphasis on pragmatic and mathematical aspects of program efficiency. Topics include divide and conquer algorithms, recurrences, greedy algorithms, dynamic programming, graph search and backtrack, problems without algorithms, NP-completeness and its implications.",
    "prereqs": "CS240 or CS240E; One of CS245, CS245E, SE212; MATH239 or MATH249; One of STAT206, STAT230, STAT240; Honours Computer Science, Honours Data Science (BCS, BMath), BCFM, BSE students only.",
    "antireqs": "CS231, ECE406",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "cm434",
        "name": "Techniques in Computational Number Theory"
      },
      {
        "code": "cs431",
        "name": "Data-Intensive Distributed Analytics"
      },
      {
        "code": "cs451",
        "name": "Data-Intensive Distributed Computing"
      },
      {
        "code": "cs466",
        "name": "Algorithm Design and Analysis"
      },
      {
        "code": "cs480",
        "name": "Introduction to Machine Learning"
      },
      {
        "code": "cs482",
        "name": "Computational Techniques in Biological Sequence Analysis"
      },
      {
        "code": "cs483",
        "name": "Computational Techniques in Structural Bioinformatics"
      },
      {
        "code": "cs485",
        "name": "Statistical and Computational Foundations of Machine Learning"
      },
      {
        "code": "cs486",
        "name": "Introduction to Artificial Intelligence"
      },
      {
        "code": "cs488",
        "name": "Introduction to Computer Graphics"
      },
      {
        "code": "cs493",
        "name": "Team Project 1"
      },
      {
        "code": "pmath434",
        "name": "Set Theory"
      },
      {
        "code": "cs445",
        "name": "Software Requirements Specification and Analysis"
      }
    ]
  },
  {
    "code": "cs343",
    "name": "Concurrent and Parallel Programming",
    "description": "An introduction to concurrent and parallel programming, with an emphasis on language constructs. Major topics include exceptions, coroutines, atomic operations, critical sections, mutual exclusion, semaphores, high-level concurrency, deadlock, interprocess communication, process structuring, shared memory, and distributed architectures. Students will learn how to structure, implement, and debug concurrent programs.",
    "prereqs": "CS350 or SE350; Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs346",
    "name": "Application Development",
    "description": "Introduction to full-stack application design and development. Students will work in project teams to design and build complete, working applications and services using standard tools. Topics include best-practices in design, development, testing, and deployment.",
    "prereqs": "CS246/CS246E or CS247. Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs348",
    "name": "Introduction to Database Management",
    "description": "The main objective of this course is to introduce students to fundamentals of database technology by studying databases from three viewpoints: those of the database user, the database designer, and the database administrator. It teaches the use of a database management system (DBMS) by treating it as a black box, focusing only on its functionality and its interfaces. Topics include introduction to database systems, relational database systems, database design methodology, SQL and interfaces, database application development, concept of transactions, ODBC, JDBC, database tuning, database administration, and current topics (distributed databases, data warehouses, data mining).",
    "prereqs": "Honours Computer Science, Honours Data Science (BCS, BMath), BCFM, BSE students only.",
    "antireqs": "CS338, ECE356, ECE456, MSCI346",
    "coreqs": "CS240/CS240E.",
    "postrequisites": [
      {
        "code": "cs448",
        "name": "Database Systems Implementation"
      },
      {
        "code": "cs451",
        "name": "Data-Intensive Distributed Computing"
      },
      {
        "code": "msci446",
        "name": "Introduction to Machine Learning"
      },
      {
        "code": "msci436",
        "name": "Decision Support Systems"
      },
      {
        "code": "mse436",
        "name": "Decision Support Systems"
      }
    ]
  },
  {
    "code": "cs349",
    "name": "User Interfaces",
    "description": "An introduction to contemporary user interface implementation concepts, including event abstraction, graphical components, layout, feedback, testing, accessibility, and architectures to develop user interfaces. One or more types of interface toolkit paradigms are considered.",
    "prereqs": "CS241/CS241E and (one of MATH115, MATH136, MATH146); Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs350",
    "name": "Operating Systems",
    "description": "An introduction to the fundamentals of operating system function, design, and implementation. Topics include concurrency, synchronization, processes, threads, scheduling, memory management, file systems, device management, and security.",
    "prereqs": "CS240/CS240E, CS241/CS241E, CS246/CS246E, (CS251/CS251E or ECE222); Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only.",
    "antireqs": "ECE254, ECE350, MTE241, SE350",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "cs343",
        "name": "Concurrent and Parallel Programming"
      },
      {
        "code": "cs444",
        "name": "Compiler Construction"
      },
      {
        "code": "cs445",
        "name": "Software Requirements Specification and Analysis"
      },
      {
        "code": "cs446",
        "name": "Software Design and Architectures"
      },
      {
        "code": "cs447",
        "name": "Software Testing, Quality Assurance, and Maintenance"
      },
      {
        "code": "cs448",
        "name": "Database Systems Implementation"
      },
      {
        "code": "cs450",
        "name": "Computer Architecture"
      },
      {
        "code": "cs451",
        "name": "Data-Intensive Distributed Computing"
      },
      {
        "code": "cs452",
        "name": "Real-Time Programming"
      },
      {
        "code": "cs454",
        "name": "Distributed Systems"
      },
      {
        "code": "cs456",
        "name": "Computer Networks"
      },
      {
        "code": "cs458",
        "name": "Computer Security and Privacy"
      },
      {
        "code": "cs488",
        "name": "Introduction to Computer Graphics"
      },
      {
        "code": "cs490",
        "name": "Information Systems Management"
      },
      {
        "code": "cs493",
        "name": "Team Project 1"
      },
      {
        "code": "cs658",
        "name": "Computer Security and Privacy"
      },
      {
        "code": "ece429",
        "name": "Computer Architecture"
      },
      {
        "code": "cs453",
        "name": "Software and Systems Security"
      },
      {
        "code": "cs459",
        "name": "Privacy, Cryptography, Network and Data Security"
      },
      {
        "code": "ece423",
        "name": "Embedded Computer Systems"
      }
    ]
  },
  {
    "code": "cs360",
    "name": "Introduction to the Theory of Computing",
    "description": "Models of computers including finite automata and Turing machines. Basics of formal languages with applications to the syntax of programming languages. Alternate characterizations of language classes. Proving unrecognizability. Unsolvable problems and their relevance to the semantics of programming.",
    "prereqs": "CS240/CS240E, CS241/CS241E and (MATH239 or MATH249); Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only.",
    "antireqs": "CS365",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "cs462",
        "name": "Formal Languages and Parsing"
      }
    ]
  },
  {
    "code": "cs365",
    "name": "Models of Computation",
    "description": "Finite automata and regular expressions. Pushdown automata and context-free grammars. Turing machines and undecidability. Time and space complexity. Diagonalization and hierarchies. CS365 covers the material in CS360 at an accelerated pace plus additional topics in computational complexity.",
    "prereqs": "CS240/CS240E, CS241/CS241E and (MATH239 or MATH249); Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only.",
    "antireqs": "CS360",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "cs462",
        "name": "Formal Languages and Parsing"
      }
    ]
  },
  {
    "code": "cs370",
    "name": "Numerical Computation",
    "description": "Principles and practices of basic numerical computation as a key aspect of scientific computation. Visualization of results. Approximation by splines, fast Fourier transforms, solution of linear and nonlinear equations, differential equations, floating point number systems, error, stability. Presented in the context of specific applications to image processing, analysis of data, scientific modelling.",
    "prereqs": "(One of MATH118, MATH119, MATH128, MATH138, MATH148), (one of MATH106, MATH114, MATH115, MATH136, MATH146), (one of CS231, CS234, CS241/CS241E, CS246/CS246E).",
    "antireqs": "AMATH242/CS371, CHE121, CIVE121, CS335, ECE204, MTE204",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "cm375",
        "name": "Computational Linear Algebra"
      },
      {
        "code": "cm452",
        "name": "Computational Methods for Partial Differential Equations"
      },
      {
        "code": "cm473",
        "name": "Medical Image Processing"
      },
      {
        "code": "cm476",
        "name": "Numeric Computation for Financial Modeling"
      },
      {
        "code": "cs473",
        "name": "Medical Image Processing"
      },
      {
        "code": "cs475",
        "name": "Computational Linear Algebra"
      },
      {
        "code": "cs476",
        "name": "Numeric Computation for Financial Modeling"
      },
      {
        "code": "cs484",
        "name": "Computational Vision"
      },
      {
        "code": "cs488",
        "name": "Introduction to Computer Graphics"
      },
      {
        "code": "cs673",
        "name": "Medical Image Processing"
      },
      {
        "code": "cs676",
        "name": "Numeric Computation for Financial Modelling"
      },
      {
        "code": "cs479",
        "name": "Neural Networks"
      },
      {
        "code": "amath342",
        "name": "Computational Methods for Differential Equations"
      },
      {
        "code": "actsc447",
        "name": "Numerical Computation for Financial Modelling"
      },
      {
        "code": "amath449",
        "name": "Neural Networks"
      }
    ]
  },
  {
    "code": "cs371",
    "name": "Introduction to Computational Mathematics",
    "description": "A rigorous introduction to the field of computational mathematics. The focus is on the interplay between continuous models and their solution via discrete processes. Topics include pitfalls in computation, solution of linear systems, interpolation, discrete Fourier transforms, and numerical integration. Applications are used as motivation.",
    "prereqs": "(One of CS116, CS136, CS138, CS146), MATH235 or MATH245, MATH237 or MATH247.",
    "antireqs": "CS335, CS370, ECE204, MTE204",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "amath342",
        "name": "Computational Methods for Differential Equations"
      },
      {
        "code": "cm352",
        "name": "Computational Methods for Differential Equations"
      },
      {
        "code": "cm375",
        "name": "Computational Linear Algebra"
      },
      {
        "code": "cm452",
        "name": "Computational Methods for Partial Differential Equations"
      },
      {
        "code": "cm473",
        "name": "Medical Image Processing"
      },
      {
        "code": "cm476",
        "name": "Numeric Computation for Financial Modeling"
      },
      {
        "code": "co352",
        "name": "Computational Optimization"
      },
      {
        "code": "cs473",
        "name": "Medical Image Processing"
      },
      {
        "code": "cs475",
        "name": "Computational Linear Algebra"
      },
      {
        "code": "cs476",
        "name": "Numeric Computation for Financial Modeling"
      },
      {
        "code": "cs484",
        "name": "Computational Vision"
      },
      {
        "code": "cs488",
        "name": "Introduction to Computer Graphics"
      },
      {
        "code": "cs673",
        "name": "Medical Image Processing"
      },
      {
        "code": "cs676",
        "name": "Numeric Computation for Financial Modelling"
      },
      {
        "code": "cs479",
        "name": "Neural Networks"
      },
      {
        "code": "actsc447",
        "name": "Numerical Computation for Financial Modelling"
      },
      {
        "code": "amath449",
        "name": "Neural Networks"
      }
    ]
  },
  {
    "code": "cs442",
    "name": "Principles of Programming Languages",
    "description": "An exposure to important concepts and issues in contemporary programming languages. Data types, abstraction, and polymorphism. Program structure. Lambda calculus and functional programming, logic programming, object-oriented programming. Semantics of programming languages. Critical comparison of language features and programming methodologies using examples drawn from a variety of programming languages including Lisp, Prolog, ML, Ada, Smalltalk, Icon, APL, and Lucid. Programming assignments involve the use of some of these languages.",
    "prereqs": "CS240/CS240E; Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs444",
    "name": "Compiler Construction",
    "description": "Phases of compilation. Lexical analysis and a review of parsing. Compiler-compilers and translator writing systems. LEX and YACC. Scope rules, block structure, and symbol tables. Runtime stack management. Parameter passage mechanisms. Stack storage organization and templates. Heap storage management. Intermediate code. Code generation. Macros.",
    "prereqs": "CS350 or SE350; Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs445",
    "name": "Software Requirements Specification and Analysis",
    "description": "Introduces students to the requirements definition phase of software development. Models, notations, and processes for software requirements identification, representation, analysis, and validation. Cost estimation from early documents and specifications.",
    "prereqs": "CS341 or CS350; Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only.",
    "antireqs": "SE463",
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs446",
    "name": "Software Design and Architectures",
    "description": "Introduces students to the design, implementation, and evolution phases of software development. Software design processes, methods, and notation. Implementation of designs. Evolution of designs and implementations. Management of design activities.",
    "prereqs": "CS350; Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only.",
    "antireqs": "CS430, SE464",
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs447",
    "name": "Software Testing, Quality Assurance, and Maintenance",
    "description": "Introduces students to systematic testing of software systems. Software verification, reviews, metrics, quality assurance, and prediction of software reliability and availability. Related management issues.",
    "prereqs": "CS350; Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only.",
    "antireqs": "SE465",
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs448",
    "name": "Database Systems Implementation",
    "description": "The objective of this course is to introduce students to fundamentals of building a relational database management system. The course focuses on the database engine core technology by studying topics such as storage management (data layout, disk-based data structures), indexing, query processing algorithms, query optimization, transactional concurrency control, logging and recovery.",
    "prereqs": "CS348 and (CS350 or SE350); Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs449",
    "name": "Human-Computer Interaction",
    "description": "An introduction to the fundamental theories, methods, and research in the design and evaluation of novel computational artifacts designed to meet real-world human needs.",
    "prereqs": "CS240/CS240E, CS241CS/CS241E; Level at least 3B; Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only.",
    "antireqs": "SYDE348/SYDE548",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "msci436",
        "name": "Decision Support Systems"
      },
      {
        "code": "mse436",
        "name": "Decision Support Systems"
      }
    ]
  },
  {
    "code": "cs450",
    "name": "Computer Architecture",
    "description": "The course is intended to provide the student with an appreciation of modern computer design and its relation to system architecture, compiler technology, and operating system functionality. The course places an emphasis on design based on the measurement of performance and its dependency on parallelism, efficiency, latency, and resource utilization.",
    "prereqs": "(CS245/CS245E or SE212) and (CS350 or SE350); Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only.",
    "antireqs": "ECE320, ECE429",
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs451",
    "name": "Data-Intensive Distributed Computing",
    "description": "Introduces students to infrastructure for data-intensive computing, with a focus on abstractions, frameworks, and algorithms that allow developers to distribute computations across many machines. Topics include core concepts (partitioning, replication, locality, consistency), computational models (MapReduce, dataflows, stream processing, bulk-synchronous parallel), and applications.",
    "prereqs": "CS341, CS348 and (CS350 or SE350); Honours Computer Science, Honours Data Science (BCS, BMath), BCFM, BSE students only",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs452",
    "name": "Real-Time Programming",
    "description": "Intended to give students experience with tools and techniques of real-time programming, this course includes not only issues of microcomputer architecture and a real-time programming language and operating system, but also hands-on experience programming a microcomputer for applications such as process control, data acquisition and communication.",
    "prereqs": "CS350 or SE350; Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs453",
    "name": "Software and Systems Security",
    "description": "Introduction to security issues in modern software, operating systems, and other computing platforms (e.g., mobile and cloud environments). Causes of security breaches and methods to help detect, isolate, and prevent them. Specific topics include comparing security and privacy, program security, operating system security, mobile security, hardware security, administrating security, and legal and ethical issues.",
    "prereqs": "CS350 or SE350; Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs454",
    "name": "Distributed Systems",
    "description": "An introduction to distributed systems, emphasizing the multiple levels of software in such systems. Specific topics include fundamentals of data communications, network architecture and protocols, local-area networks, concurrency control in distributed systems, recovery in distributed systems, and clock synchronization.",
    "prereqs": "CS350 or SE350; Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only.",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": [
      {
        "code": "cs459",
        "name": "Privacy, Cryptography, Network and Data Security"
      }
    ]
  },
  {
    "code": "cs456",
    "name": "Computer Networks",
    "description": "An introduction to network architectures and protocols, placing emphasis on protocols used in the Internet. Specific topics include application layer protocols, network programming, transport protocols, routing, multicast, data link layer issues, multimedia networking, network security, and network management.",
    "prereqs": "CS350 or SE350; Computer Science students only.",
    "antireqs": "CS436, ECE358, ECE428",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "cs459",
        "name": "Privacy, Cryptography, Network and Data Security"
      }
    ]
  },
  {
    "code": "cs458",
    "name": "Computer Security and Privacy",
    "description": "Security and privacy issues in various aspects of computing. Specific topics include comparing security and privacy, program security, writing secure programs, controls against program threats, operating system security, formal security models, network security, Internet application security and privacy, privacy-enhancing technologies, database security and privacy, inference, data mining, security policies, physical security, economics of security, and legal and ethical issues. [Note: Lab is not scheduled and students are expected to find time in open hours to complete their work.]",
    "prereqs": "CS350 or SE350. Computer Science students only.",
    "antireqs": "ECE458",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "ece458",
        "name": "Computer Security"
      }
    ]
  },
  {
    "code": "cs459",
    "name": "Privacy, Cryptography, Network and Data Security",
    "description": "Introduction to privacy and security using cryptography and related techniques in networks, distributed systems, and data science. The course examines how data and metadata can be protected at rest, in transit, and during computation. For at-rest protection, specific topics include the basics of cryptography and relevant ethics/policy concepts. For in-transit protection, specific topics include network defenses, authentication, and secure and anonymous communication protocols. For during-computation protection, specific topics include data inference, differential privacy, homomorphic encryption, multi-party computations, and related protocols.",
    "prereqs": "MATH135 or MATH145; CS350 or SE350. Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only.",
    "antireqs": null,
    "coreqs": "CS454 or CS456",
    "postrequisites": []
  },
  {
    "code": "cs462",
    "name": "Formal Languages and Parsing",
    "description": "Languages and their representations. Grammars --Chomsky hierarchy. Regular sets and sequential machines. Context-free grammars -- normal forms, basic properties. Pushdown automata and transducers. Operations on languages. Undecidable problems in language theory. Applications to the design of programming languages and compiler construction.",
    "prereqs": "CS360 or CS365; Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs466",
    "name": "Algorithm Design and Analysis",
    "description": "Algorithmic approaches and methods of assessment that reflect a broad spectrum of criteria, including randomized algorithms, amortized analysis, lower bounds, approximation algorithms, and on-line algorithms. Particular examples will be chosen from different areas of active research and application.",
    "prereqs": "CS341; Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs467",
    "name": "Introduction to Quantum Information Processing",
    "description": "Basics of computational complexity; basics of quantum information; quantum phenomena; quantum circuits and universality; relationship between quantum and classical complexity classes; simple quantum algorithms; quantum Fourier transform; Shor factoring algorithm; Grover search algorithm; physical realization of quantum computation; error-correction and fault-tolerance; quantum key distribution.",
    "prereqs": "MATH235 or MATH245 with grade at least 80%; Level at least 3A",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": [
      {
        "code": "phys468",
        "name": "Introduction to the Implementation of Quantum Information Processing"
      }
    ]
  },
  {
    "code": "cs476",
    "name": "Numeric Computation for Financial Modeling",
    "description": "The interaction of financial models, numerical methods, and computing environments. Basic computational aspects of option pricing and hedging. Numerical methods for stochastic differential equations, strong and weak convergence. Generating correlated random numbers. Time-stepping methods. Finite difference methods for the Black-Scholes equation. Discretization, stability, convergence. Methods for portfolio optimization, effect of data errors on portfolio weights.",
    "prereqs": "(AMATH242/CS371 or CS370) and (STAT206 with at least 60% or STAT231 or STAT241)",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs480",
    "name": "Introduction to Machine Learning",
    "description": "Introduction to modelling and algorithmic techniques for machines to learn concepts from data. Generalization: underfitting, overfitting, cross-validation. Tasks: classification, regression, clustering. Optimization-based learning: loss minimization. regularization. Statistical learning: maximum likelihood, Bayesian learning. Algorithms: nearest neighbour, (generalized) linear regression, mixtures of Gaussians, Gaussian processes, kernel methods, support vector machines, deep learning, sequence learning, ensemble techniques. Large scale learning: distributed learning and stream learning. Applications: Natural language processing, computer vision, data mining, human computer interaction, information retrieval.",
    "prereqs": "CS341 and (STAT206 or STAT231 or STAT241); Computer Science and BMath (Data Science) students only.",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": [
      {
        "code": "msci546",
        "name": "Advanced Machine Learning"
      },
      {
        "code": "mse546",
        "name": "Advanced Machine Learning"
      }
    ]
  },
  {
    "code": "cs482",
    "name": "Computational Techniques in Biological Sequence Analysis",
    "description": "Computer science principles and algorithms in biological sequence analysis.  Topics include algorithms for sequence comparison, for large-scale database search in biological databases, for sequence assembly, for evolutionary tree reconstruction, for identifying important features in DNA and RNA sequences, and underlying computational techniques for understanding strings and trees and for making probabilistic inferences.",
    "prereqs": "CS341 and (STAT206 with at least 70% or STAT231 with at least 60% or STAT241)",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": [
      {
        "code": "biol465",
        "name": "Structural Bioinformatics"
      }
    ]
  },
  {
    "code": "cs484",
    "name": "Computational Vision",
    "description": "Introduction to image and vision understanding by computer. Camera-system geometry, image formation and lighting, and image acquisition. Basic visual processes for recognition of edges, regions, lines, and surfaces. Processing of stereo images, and motion in image sequences. Object recognition. Applications of computer-vision systems.",
    "prereqs": "(One of AMATH242/CS371, CS370, MATH235, MATH245) and (One of STAT206, STAT230 or STAT240); Honours Computer Science, Honours Data Science (BCS, BMath), BCFM, BSE students only",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs485",
    "name": "Statistical and Computational Foundations of Machine Learning",
    "description": "Extracting meaningful patterns from random samples of large data sets. Statistical analysis of the resulting problems. Common algorithmic paradigms for such tasks. Central concepts: VC-dimension, margins of a classifier, sparsity and description length, other types of regularization. Performance guarantees: generalization bounds, data dependent error bounds, and computational complexity of learning algorithms. Common paradigms: neural networks, kernel methods and support-vector machines, boosting, nearest neighbor classifiers. Applications to data mining.",
    "prereqs": "CS341 and (STAT206 or STAT230 or STAT240); Honours Computer Science, Honours Data Science (BCS, BMath), BCFM, BSE students only",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs486",
    "name": "Introduction to Artificial Intelligence",
    "description": "Goals and methods of artificial intelligence. Methods of general problem solving. Knowledge representation and reasoning. Planning. Reasoning about uncertainty. Machine learning. Multi-agent systems. Natural language processing.",
    "prereqs": "CS341; Computer Science and BMath (Data Science) students only.",
    "antireqs": null,
    "coreqs": "STAT206 or STAT231 or STAT241.",
    "postrequisites": []
  },
  {
    "code": "cs488",
    "name": "Introduction to Computer Graphics",
    "description": "Software and hardware for interactive computer graphics. Implementation of device drivers, 3-D transformations, clipping, perspective, and input routines. Data structures, hidden surface removal, colour shading techniques, and some additional topics will be covered.",
    "prereqs": "CS341 and (CS350 or SE350) and (CS370 or CS371); Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs489",
    "name": "Advanced Topics in Computer Science",
    "description": "See the Course Offerings List for topics available.",
    "prereqs": "Level at least 3B; Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs490",
    "name": "Information Systems Management",
    "description": "The integration of business and technical considerations in the design, implementation and management of information systems. Topics include: IS planning and development; business, management, executive, and strategic information systems, including case studies of selected large- scale systems; decision support systems; end-user training and development; systems security, disaster planning and recovery. Practical examples of information systems in industry.",
    "prereqs": "CS350 or SE350; Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only.",
    "antireqs": "BUS415W, BUS486W",
    "coreqs": null,
    "postrequisites": [
      {
        "code": "afm442",
        "name": "E-business: Enterprise Systems"
      },
      {
        "code": "afm443",
        "name": "E-business: Introduction to Electronic Commerce"
      },
      {
        "code": "comm432",
        "name": "Electronic Business"
      }
    ]
  },
  {
    "code": "cs492",
    "name": "The Social Implications of Computing",
    "description": "This course is designed to consider the problems encountered by individuals, organizations and society as computer technology is adopted, with a view towards assessing possible courses of action.",
    "prereqs": "CS240/CS240E; Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs497",
    "name": "Multidisciplinary Studies in Computer Science",
    "description": "See the Course Offerings list for topics available.",
    "prereqs": "Level at least 3B; Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  },
  {
    "code": "cs499t",
    "name": "Honours Thesis",
    "description": "The student will undertake new analysis, synthesis, measurement, or experimentation to produce a document that demonstrates a depth of understanding of a topic that goes beyond what is obtained in a standard undergraduate education.",
    "prereqs": "Honours Computer Science, Honours Data Science (BCS), BCFM, BSE students only",
    "antireqs": null,
    "coreqs": null,
    "postrequisites": []
  }
]